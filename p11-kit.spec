#
# This file is auto-generated. DO NOT EDIT
# Generated by: autospec.py
#
%define keepstatic 1
Name     : p11-kit
Version  : 0.23.22
Release  : 62
URL      : file:///insilications/build/clearlinux/packages/p11-kit/p11-kit-0.23.22.tar.gz
Source0  : file:///insilications/build/clearlinux/packages/p11-kit/p11-kit-0.23.22.tar.gz
Summary  : Library and proxy module for properly loading and sharing PKCS#11 modules.
Group    : Development/Tools
License  : BSD-3-Clause
Requires: p11-kit-bin = %{version}-%{release}
Requires: p11-kit-data = %{version}-%{release}
Requires: p11-kit-lib = %{version}-%{release}
Requires: p11-kit-libexec = %{version}-%{release}
Requires: p11-kit-services = %{version}-%{release}
Requires: ca-certs
Requires: findutils
BuildRequires : buildreq-meson
BuildRequires : ca-certs
BuildRequires : ca-certs-static
BuildRequires : ccache
BuildRequires : findutils
BuildRequires : gcc-dev32
BuildRequires : gcc-libgcc32
BuildRequires : gcc-libstdc++32
BuildRequires : glibc-dev32
BuildRequires : glibc-libc32
BuildRequires : gtk-doc
BuildRequires : intltool-dev
BuildRequires : libffi-dev
BuildRequires : libffi-dev32
BuildRequires : libffi-staticdev
BuildRequires : libffi-staticdev32
BuildRequires : libtasn1-dev
BuildRequires : libtasn1-dev32
BuildRequires : libtasn1-staticdev
BuildRequires : libtasn1-staticdev32
BuildRequires : openssl
BuildRequires : openssl-dev
BuildRequires : pkg-config
BuildRequires : pkgconfig(32libffi)
BuildRequires : pkgconfig(32libsystemd)
BuildRequires : pkgconfig(32libtasn1)
BuildRequires : pkgconfig(libcrypto)
BuildRequires : pkgconfig(libffi)
BuildRequires : pkgconfig(libssl)
BuildRequires : pkgconfig(libsystemd)
BuildRequires : pkgconfig(libtasn1)
BuildRequires : pkgconfig(openssl)
BuildRequires : util-linux-bin
BuildRequires : util-linux-dev
BuildRequires : util-linux-extras
# Suppress stripping binaries
%define __strip /bin/true
%define debug_package %{nil}
Patch1: 0001-Added-P11_TRUST_PATHS-to-override-via-env.patch
Patch2: 0002-Use-p11-trust-instead-of-trust.patch

%description
# p11-kit
[![Build Status](https://travis-ci.org/p11-glue/p11-kit.svg?branch=master)](https://travis-ci.org/p11-glue/p11-kit) [![Coverage Status](https://img.shields.io/coveralls/p11-glue/p11-kit.svg)](https://coveralls.io/r/p11-glue/p11-kit) [![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/1627/badge)](https://bestpractices.coreinfrastructure.org/en/projects/1627) [![Total alerts](https://img.shields.io/lgtm/alerts/g/p11-glue/p11-kit.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/p11-glue/p11-kit/alerts/) [![Language grade: C/C++](https://img.shields.io/lgtm/grade/cpp/g/p11-glue/p11-kit.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/p11-glue/p11-kit/context:cpp)

%package bin
Summary: bin components for the p11-kit package.
Group: Binaries
Requires: p11-kit-data = %{version}-%{release}
Requires: p11-kit-libexec = %{version}-%{release}
Requires: p11-kit-services = %{version}-%{release}

%description bin
bin components for the p11-kit package.


%package data
Summary: data components for the p11-kit package.
Group: Data

%description data
data components for the p11-kit package.


%package dev
Summary: dev components for the p11-kit package.
Group: Development
Requires: p11-kit-lib = %{version}-%{release}
Requires: p11-kit-bin = %{version}-%{release}
Requires: p11-kit-data = %{version}-%{release}
Provides: p11-kit-devel = %{version}-%{release}
Requires: p11-kit = %{version}-%{release}
Requires: p11-kit-dev = %{version}-%{release}
Requires: p11-kit-dev32 = %{version}-%{release}

%description dev
dev components for the p11-kit package.


%package dev32
Summary: dev32 components for the p11-kit package.
Group: Default
Requires: p11-kit-lib32 = %{version}-%{release}
Requires: p11-kit-bin = %{version}-%{release}
Requires: p11-kit-data = %{version}-%{release}
Requires: p11-kit-dev = %{version}-%{release}
Requires: p11-kit-dev32 = %{version}-%{release}

%description dev32
dev32 components for the p11-kit package.


%package lib
Summary: lib components for the p11-kit package.
Group: Libraries
Requires: p11-kit-data = %{version}-%{release}
Requires: p11-kit-libexec = %{version}-%{release}

%description lib
lib components for the p11-kit package.


%package lib32
Summary: lib32 components for the p11-kit package.
Group: Default
Requires: p11-kit-data = %{version}-%{release}

%description lib32
lib32 components for the p11-kit package.


%package libexec
Summary: libexec components for the p11-kit package.
Group: Default

%description libexec
libexec components for the p11-kit package.


%package services
Summary: services components for the p11-kit package.
Group: Systemd services

%description services
services components for the p11-kit package.


%prep
%setup -q -n p11-kit
cd %{_builddir}/p11-kit
%patch1 -p1
%patch2 -p1
pushd ..
cp -a p11-kit build32
popd

%build
unset http_proxy
unset https_proxy
unset no_proxy
export SSL_CERT_FILE=/var/cache/ca-certs/anchors/ca-certificates.crt
export LANG=C.UTF-8
export SOURCE_DATE_EPOCH=1610397991
export GCC_IGNORE_WERROR=1
## altflags1 content
export CFLAGS="-g -O3 -march=native -mtune=native -fgraphite-identity -Wall -Wl,--as-needed -Wl,--build-id=sha1 -Wl,--enable-new-dtags -Wl,--hash-style=gnu -Wl,-O2 -Wl,-z,now -Wl,-z,relro -falign-functions=32 -flimit-function-alignment -fasynchronous-unwind-tables -fdevirtualize-at-ltrans -floop-nest-optimize -fno-math-errno -fno-semantic-interposition -fno-stack-protector -fno-trapping-math -ftree-loop-distribute-patterns -ftree-loop-vectorize -ftree-vectorize -funroll-loops -fuse-ld=bfd -fuse-linker-plugin -malign-data=cacheline -feliminate-unused-debug-types -fipa-pta -flto=16 -mtls-dialect=gnu2 -Wl,-sort-common -Wno-error -Wp,-D_REENTRANT -pipe -ffat-lto-objects -fPIC -Wl,--whole-archive,/usr/lib64/libffi.a,/usr/lib64/libtasn1.a,-Wl,--no-whole-archive"
# -ffat-lto-objects -fno-PIE -fno-PIE -m64 -no-pie -fpic -fvisibility=hidden -flto-partition=none
# gcc: -feliminate-unused-debug-types -fipa-pta -flto=16 -Wno-error -Wp,-D_REENTRANT -fno-common
export CXXFLAGS="-g -O3 -march=native -mtune=native -fgraphite-identity -Wall -Wl,--as-needed -Wl,--build-id=sha1 -Wl,--enable-new-dtags -Wl,--hash-style=gnu -Wl,-O2 -Wl,-z,now -Wl,-z,relro -falign-functions=32 -flimit-function-alignment -fasynchronous-unwind-tables -fdevirtualize-at-ltrans -floop-nest-optimize -fno-math-errno -fno-semantic-interposition -fno-stack-protector -fno-trapping-math -ftree-loop-distribute-patterns -ftree-loop-vectorize -ftree-vectorize -funroll-loops -fuse-ld=bfd -fuse-linker-plugin -malign-data=cacheline -feliminate-unused-debug-types -fipa-pta -flto=16 -mtls-dialect=gnu2 -Wl,-sort-common -Wno-error -Wp,-D_REENTRANT -fvisibility-inlines-hidden -pipe -ffat-lto-objects -fPIC -Wl,--whole-archive,/usr/lib64/libffi.a,/usr/lib64/libtasn1.a,-Wl,--no-whole-archive"
#
export FCFLAGS="-g -O3 -march=native -mtune=native -fgraphite-identity -Wall -Wl,--as-needed -Wl,--build-id=sha1 -Wl,--enable-new-dtags -Wl,--hash-style=gnu -Wl,-O2 -Wl,-z,now -Wl,-z,relro -falign-functions=32 -flimit-function-alignment -fasynchronous-unwind-tables -fdevirtualize-at-ltrans -floop-nest-optimize -fno-math-errno -fno-semantic-interposition -fno-stack-protector -fno-trapping-math -ftree-loop-distribute-patterns -ftree-loop-vectorize -ftree-vectorize -funroll-loops -fuse-ld=bfd -fuse-linker-plugin -malign-data=cacheline -feliminate-unused-debug-types -fipa-pta -flto=16 -mtls-dialect=gnu2 -Wl,-sort-common -Wno-error -Wp,-D_REENTRANT -pipe -ffat-lto-objects -fPIC"
export FFLAGS="-g -O3 -march=native -mtune=native -fgraphite-identity -Wall -Wl,--as-needed -Wl,--build-id=sha1 -Wl,--enable-new-dtags -Wl,--hash-style=gnu -Wl,-O2 -Wl,-z,now -Wl,-z,relro -falign-functions=32 -flimit-function-alignment -fasynchronous-unwind-tables -fdevirtualize-at-ltrans -floop-nest-optimize -fno-math-errno -fno-semantic-interposition -fno-stack-protector -fno-trapping-math -ftree-loop-distribute-patterns -ftree-loop-vectorize -ftree-vectorize -funroll-loops -fuse-ld=bfd -fuse-linker-plugin -malign-data=cacheline -feliminate-unused-debug-types -fipa-pta -flto=16 -mtls-dialect=gnu2 -Wl,-sort-common -Wno-error -Wp,-D_REENTRANT -pipe -ffat-lto-objects -fPIC"
export CFFLAGS="-g -O3 -march=native -mtune=native -fgraphite-identity -Wall -Wl,--as-needed -Wl,--build-id=sha1 -Wl,--enable-new-dtags -Wl,--hash-style=gnu -Wl,-O2 -Wl,-z,now -Wl,-z,relro -falign-functions=32 -flimit-function-alignment -fasynchronous-unwind-tables -fdevirtualize-at-ltrans -floop-nest-optimize -fno-math-errno -fno-semantic-interposition -fno-stack-protector -fno-trapping-math -ftree-loop-distribute-patterns -ftree-loop-vectorize -ftree-vectorize -funroll-loops -fuse-ld=bfd -fuse-linker-plugin -malign-data=cacheline -feliminate-unused-debug-types -fipa-pta -flto=16 -mtls-dialect=gnu2 -Wl,-sort-common -Wno-error -Wp,-D_REENTRANT -pipe -ffat-lto-objects -fPIC"
#
export LDFLAGS="-g -O3 -march=native -mtune=native -fgraphite-identity -Wall -Wl,--as-needed -Wl,--build-id=sha1 -Wl,--enable-new-dtags -Wl,--hash-style=gnu -Wl,-O2 -Wl,-z,now -Wl,-z,relro -falign-functions=32 -flimit-function-alignment -fasynchronous-unwind-tables -fdevirtualize-at-ltrans -floop-nest-optimize -fno-math-errno -fno-semantic-interposition -fno-stack-protector -fno-trapping-math -ftree-loop-distribute-patterns -ftree-loop-vectorize -ftree-vectorize -funroll-loops -fuse-ld=bfd -fuse-linker-plugin -malign-data=cacheline -feliminate-unused-debug-types -fipa-pta -flto=16 -mtls-dialect=gnu2 -Wl,-sort-common -Wno-error -Wp,-D_REENTRANT -pipe -ffat-lto-objects -fPIC -Wl,--whole-archive,/usr/lib64/libffi.a,/usr/lib64/libtasn1.a,-Wl,--no-whole-archive"
#
export AR=gcc-ar
export RANLIB=gcc-ranlib
export NM=gcc-nm
#
export MAKEFLAGS=%{?_smp_mflags}
#
%global _lto_cflags 1
#global _lto_cflags %{nil}
#
unset CCACHE_DISABLE
export PATH="/usr/lib64/ccache/bin:$PATH"
export CCACHE_NOHASHDIR=true
export CCACHE_CPP2=true
export CCACHE_SLOPPINESS=pch_defines,time_macros,locale,file_stat_matches,file_stat_matches_ctime,include_file_ctime,include_file_mtime,modules,system_headers,clang_index_store,file_macro
#export CCACHE_SLOPPINESS=modules,include_file_mtime,include_file_ctime,time_macros,pch_defines,file_stat_matches,clang_index_store,system_headers,locale
#export CCACHE_SLOPPINESS=pch_defines,time_macros,locale,clang_index_store,file_macro
export CCACHE_DIR=/var/tmp/ccache
export CCACHE_BASEDIR=/builddir/build/BUILD
#export CCACHE_LOGFILE=/var/tmp/ccache/cache.debug
#export CCACHE_DEBUG=true
#export CCACHE_NODIRECT=true
#find . -type f -name 'Makefile' -exec sed -i 's:-lffi\b:-Wl,--whole-archive,/usr/lib64/libffi.a,-lpthread,-ldl,-lm,-lmvec,--no-whole-archive:g' {} \;
#find . -type f -name 'Makefile' -exec sed -i 's:-ltasn1\b:-Wl,--whole-archive,/usr/lib64/libtasn1.a,-lpthread,-ldl,-lm,-lmvec,--no-whole-archive:g' {} \;
#make -j16 VERBOSE=1 V=1 LDFLAGS="${LDFLAGS} -Wl,--whole-archive /usr/lib64/libffi.a /usr/lib64/libtasn1.a -Wl,--no-whole-archive" CFLAGS="${CFLAGS} -Wl,--whole-archive /usr/lib64/libffi.a /usr/lib64/libtasn1.a -Wl,--no-whole-archive" CFLAGS="${CFLAGS} -Wl,--whole-archive /usr/lib64/libffi.a /usr/lib64/libtasn1.a -Wl,--no-whole-archive"
## altflags1 end
sd --flags mi '^AC_INIT\((.*\n.*\)|.*\))' '$0\nAM_MAINTAINER_MODE([disable])' configure.ac
export CFLAGS="${CFLAGS_GENERATE}"
export CXXFLAGS="${CXXFLAGS_GENERATE}"
export FFLAGS="${FFLAGS_GENERATE}"
export FCFLAGS="${FCFLAGS_GENERATE}"
export LDFLAGS="${LDFLAGS_GENERATE}"
%reconfigure --enable-shared --disable-static --with-trust-paths=/var/cache/ca-certs --with-hash-impl=internal
make  %{?_smp_mflags}  VERBOSE=1 V=1

#find . -type f -name 'Makefile' -exec sed -i 's:-lffi\b:-Wl,--whole-archive /usr/lib64/libffi.a -lpthread -ldl -lm -lmvec -Wl,--no-whole-archive:g' {} \;
#find . -type f -name 'Makefile' -exec sed -i 's:-ltasn1\b:-Wl,--whole-archive /usr/lib64/libtasn1.a -lpthread -ldl -lm -lmvec -Wl,--no-whole-archive:g' {} \;
make -j16 check V=1 VERBOSE=1 LDFLAGS="${LDFLAGS} -Wl,--whole-archive /usr/lib64/libffi.a /usr/lib64/libtasn1.a -Wl,--no-whole-archive" CFLAGS="${CFLAGS} -Wl,--whole-archive /usr/lib64/libffi.a /usr/lib64/libtasn1.a -Wl,--no-whole-archive" CFLAGS="${CFLAGS} -Wl,--whole-archive /usr/lib64/libffi.a /usr/lib64/libtasn1.a -Wl,--no-whole-archive" || :

find . -type f -name 'Makefile' -exec sed -i 's:-lffi\b:/usr/lib64/libffi.a:g' {} \;
find . -type f -name 'Makefile' -exec sed -i 's:-ltasn1\b:/usr/lib64/libtasn1.a:g' {} \;
make clean
export CFLAGS="${CFLAGS_USE}"
export CXXFLAGS="${CXXFLAGS_USE}"
export FFLAGS="${FFLAGS_USE}"
export FCFLAGS="${FCFLAGS_USE}"
export LDFLAGS="${LDFLAGS_USE}"
%reconfigure --enable-shared --disable-static --with-trust-paths=/var/cache/ca-certs --with-hash-impl=internal
make  %{?_smp_mflags}  VERBOSE=1 V=1

pushd ../build32/
export CFLAGS="-O2 -ffat-lto-objects -fuse-linker-plugin -pipe -fPIC -m32 -mstackrealign -march=native -mtune=native"
export CXXFLAGS="-O2 -ffat-lto-objects -fuse-linker-plugin -fvisibility-inlines-hidden -pipe -fPIC -m32 -mstackrealign -march=native -mtune=native"
export LDFLAGS="-O2 -ffat-lto-objects -fuse-linker-plugin -pipe -fPIC -m32 -mstackrealign -march=native -mtune=native"
export AR=gcc-ar
export RANLIB=gcc-ranlib
export NM=gcc-nm
unset LD_LIBRARY_PATH
export PKG_CONFIG_PATH="/usr/lib32/pkgconfig"
export ASFLAGS="${ASFLAGS}${ASFLAGS:+ }--32"
export CFLAGS="${CFLAGS}${CFLAGS:+ }-m32 -mstackrealign"
export CXXFLAGS="${CXXFLAGS}${CXXFLAGS:+ }-m32 -mstackrealign"
export LDFLAGS="${LDFLAGS}${LDFLAGS:+ }-m32 -mstackrealign"
sd --flags mi '^AC_INIT\((.*\n.*\)|.*\))' '$0\nAM_MAINTAINER_MODE([disable])' configure.ac
%reconfigure --enable-shared --disable-static --with-trust-paths=/var/cache/ca-certs --with-hash-impl=internal  --libdir=/usr/lib32 --build=i686-generic-linux-gnu --host=i686-generic-linux-gnu --target=i686-clr-linux-gnu
make  %{?_smp_mflags}  VERBOSE=1 V=1
popd

%check
export LANG=C.UTF-8
unset http_proxy
unset https_proxy
unset no_proxy
export SSL_CERT_FILE=/var/cache/ca-certs/anchors/ca-certificates.crt
make %{?_smp_mflags} check
cd ../build32;
make %{?_smp_mflags} check || :

%install
export SOURCE_DATE_EPOCH=1610397991
rm -rf %{buildroot}
pushd ../build32/
%make_install32
if [ -d  %{buildroot}/usr/lib32/pkgconfig ]
then
pushd %{buildroot}/usr/lib32/pkgconfig
for i in *.pc ; do ln -s $i 32$i ; done
popd
fi
popd
%make_install
## Remove excluded files
rm -f %{buildroot}/etc/pkcs11/pkcs11.conf.example
rm -f %{buildroot}%{_libdir}/p11-kit/trust-extract-compat
## install_append content
mv %{buildroot}/usr/bin/trust %{buildroot}/usr/bin/p11-trust
install -m 0755 trust-stub %{buildroot}/usr/bin/trust
ln -s %{_libdir}/pkcs11/p11-kit-trust.so %{buildroot}/%{_libdir}/libnssckbi.so
## install_append end

%files
%defattr(-,root,root,-)

%files bin
%defattr(-,root,root,-)
/usr/bin/p11-kit
/usr/bin/p11-trust
/usr/bin/trust

%files data
%defattr(-,root,root,-)
/usr/share/p11-kit/modules/p11-kit-trust.module

%files dev
%defattr(-,root,root,-)
/usr/include/p11-kit-1/p11-kit/deprecated.h
/usr/include/p11-kit-1/p11-kit/iter.h
/usr/include/p11-kit-1/p11-kit/p11-kit.h
/usr/include/p11-kit-1/p11-kit/pin.h
/usr/include/p11-kit-1/p11-kit/pkcs11.h
/usr/include/p11-kit-1/p11-kit/pkcs11x.h
/usr/include/p11-kit-1/p11-kit/remote.h
/usr/include/p11-kit-1/p11-kit/uri.h
/usr/lib64/libnssckbi.so
/usr/lib64/libp11-kit.so
/usr/lib64/p11-kit-proxy.so
/usr/lib64/pkgconfig/p11-kit-1.pc

%files dev32
%defattr(-,root,root,-)
/usr/lib32/libp11-kit.so
/usr/lib32/p11-kit-proxy.so
/usr/lib32/pkgconfig/32p11-kit-1.pc
/usr/lib32/pkgconfig/p11-kit-1.pc

%files lib
%defattr(-,root,root,-)
/usr/lib64/libp11-kit.so.0
/usr/lib64/libp11-kit.so.0.3.0
/usr/lib64/pkcs11/p11-kit-client.so
/usr/lib64/pkcs11/p11-kit-trust.so

%files lib32
%defattr(-,root,root,-)
/usr/lib32/libp11-kit.so.0
/usr/lib32/libp11-kit.so.0.3.0
/usr/lib32/pkcs11/p11-kit-client.so
/usr/lib32/pkcs11/p11-kit-trust.so

%files libexec
%defattr(-,root,root,-)
/usr/libexec/p11-kit/p11-kit-remote
/usr/libexec/p11-kit/p11-kit-server
/usr/libexec/p11-kit/trust-extract-compat

%files services
%defattr(-,root,root,-)
/usr/lib/systemd/user/p11-kit-server.service
/usr/lib/systemd/user/p11-kit-server.socket
